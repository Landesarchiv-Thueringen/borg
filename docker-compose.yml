services:

  gui:
    container_name: borg-gui
    restart: unless-stopped
    build:
      context: ./gui
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
        - CONFIGURATION=${BORG_GUI_CONFIGURATION}
    ports:
      - ${BORG_GUI_HOST_PORT}:80

  server:
    container_name: borg-server
    restart: unless-stopped
    build:
      context: ./server
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
    volumes:
      - "file-store:/borg/file-store"
    ports:
      - ${BORG_SERVER_HOST_PORT}:80
    environment:
      - GIN_MODE=${GIN_MODE}

  droid-api:
    container_name: droid-api
    restart: unless-stopped
    build:
      context: ./tools/droid
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
    volumes:
      - "file-store:/borg/file-store"
    environment:
      - GIN_MODE=${GIN_MODE}

  tika-api:
    container_name: tika-api
    restart: unless-stopped
    build:
      context: ./tools/tika
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
    volumes:
      - "file-store:/borg/file-store"
    environment:
      - GIN_MODE=${GIN_MODE}

  jhove-api:
    container_name: jhove-api
    restart: unless-stopped
    build:
      context: ./tools/jhove
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
    volumes:
      - "file-store:/borg/file-store"
    environment:
      - GIN_MODE=${GIN_MODE}

  verapdf-api:
    container_name: verapdf-api
    restart: unless-stopped
    build:
      context: ./tools/verapdf
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
    volumes:
      - "file-store:/borg/file-store"
    environment:
      - GIN_MODE=${GIN_MODE}

  odf-validator-api:
    container_name: odf-validator-api
    restart: unless-stopped
    build:
      context: ./tools/odf-validator
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
    volumes:
      - "file-store:/borg/file-store"
    environment:
      - GIN_MODE=${GIN_MODE}

  ooxml-validator-api:
    container_name: ooxml-validator-api
    restart: unless-stopped
    build:
      context: ./tools/ooxml-validator
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
    volumes:
      - "file-store:/borg/file-store"
    environment:
      - GIN_MODE=${GIN_MODE}

volumes:
  file-store: